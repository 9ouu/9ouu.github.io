<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>9ouu blog</title>
  
  <subtitle>不知名站点</subtitle>
  <link href="https://9ouu.github.io/atom.xml" rel="self"/>
  
  <link href="https://9ouu.github.io/"/>
  <updated>2025-08-01T03:47:28.003Z</updated>
  <id>https://9ouu.github.io/</id>
  
  <author>
    <name>9ouu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一次银狐病毒应急响应</title>
    <link href="https://9ouu.github.io/blog/10221/"/>
    <id>https://9ouu.github.io/blog/10221/</id>
    <published>2025-07-27T10:16:50.833Z</published>
    <updated>2025-08-01T03:47:28.003Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记一次银狐病毒应急响应"><a href="#记一次银狐病毒应急响应" class="headerlink" title="记一次银狐病毒应急响应"></a>记一次银狐病毒应急响应</h1><h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>事情的起因是，在上班的时候同事突然联系我说无法登陆企业微信，然后丢了 2 张图片过来<br><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/1.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/2.png" alt="image.png"></p><h2 id="二、处理过程"><a href="#二、处理过程" class="headerlink" title="二、处理过程"></a>二、处理过程</h2><p>看了发来的图片，这很明显了，是感染病毒木马了，于是我就问了一下是不是安装了什么软件，询问得知是跟我说是自己安装了个谷歌浏览器，我看了天塌了，仿冒的谷歌浏览器官网。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/3.png" alt="image.png"></p><p>由于公司没有防病毒，这个也是个新电脑，没有什么数据，所以也就慢慢搞了。把木马样本发去云沙箱分析。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://s.threatbook.com/report/file/0b61678a01f34ffe1a44b40d3e10d57b3f0d246be9cd50fdcdd33d3cf5d92526</span><br></pre></td></tr></table></figure><p>根据分析情况大概知道会有什么操作。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/4.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/5.png" alt="image.png"></p><p>根据云沙箱的信息，把样本拿到我的虚拟机里跑一下再，再用工具进行分析。</p><p>先定位恶意文件，可以看到恶意文件在 <code>C:\Users\bigba\AppData\Roaming\TrustAsia\intel.dll</code></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/6.png" alt="image.png"></p><p>这里可以看到还有两条注册表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\Microsoft\Windows\AppID\.NET Framework NGEN v6.0.8745c:\users\bigba\appdata\local\chrmstp.exe2018/7/24 14:42</span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">\Microsoft\Windows\AppID\.NET Framework NGEN v6.0.USANWUpdate(Not verified) TODO: &lt;公司名&gt;c:\users\bigba\appdata\roaming\trustasia\intel.dll2025/7/22 0:09</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/7.png" alt="image.png"></p><p>然后把恶意文件进程、恶意文件和注册表都清理了，重启一下电脑再用专杀工具扫描一下，发现木马可以被完全清理。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/8.png" alt="image.png"></p><p>%E5%BA%94&#x2F;8.png)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;记一次银狐病毒应急响应&quot;&gt;&lt;a href=&quot;#记一次银狐病毒应急响应&quot; class=&quot;headerlink&quot; title=&quot;记一次银狐病毒应急响应&quot;&gt;&lt;/a&gt;记一次银狐病毒应急响应&lt;/h1&gt;&lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;</summary>
      
    
    
    
    <category term="应急响应" scheme="https://9ouu.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="银狐病毒" scheme="https://9ouu.github.io/tags/%E9%93%B6%E7%8B%90%E7%97%85%E6%AF%92/"/>
    
    <category term="应急响应" scheme="https://9ouu.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>群晖系列：自建Vaultwarden (Bitwarden)</title>
    <link href="https://9ouu.github.io/blog/8140/"/>
    <id>https://9ouu.github.io/blog/8140/</id>
    <published>2023-07-21T05:11:40.000Z</published>
    <updated>2023-07-23T12:30:42.593Z</updated>
    
    <content type="html"><![CDATA[<p>当Bitwarden在快速发展的过程中，自建版本发生了开发分支。2022年5月左右，docker image由原来的bitwardenrs&#x2F;server官宣转为<a href="https://hub.docker.com/r/vaultwarden/server">vaultwarden&#x2F;server</a>。名称也由Bitwarden变为了Vaultwarden。Vaultwarden兼容所有Bitwarden的app，也就是说不论是浏览器的插件、桌面的应用程序，还是安卓、iOS的app，都能够通过Vaultwarden来自建密码管理平台，从而最大限度的保护自己的密码池。</p><h1 id="一、Vaultwarden-是什么"><a href="#一、Vaultwarden-是什么" class="headerlink" title="一、Vaultwarden 是什么"></a>一、Vaultwarden 是什么</h1><p>Vaultwarden 是一个用于本地搭建 Bitwarden 服务器的第三方 Docker 项目。仅在部署的时候使用 Vaultwarden 镜像，桌面端、移动端、浏览器扩展等客户端均使用官方 Bitwarden 客户端。</p><p>Vaultwarden 很轻量，对于不希望使用官方的占用大量资源的自托管部署而言，它是理想的选择。</p><h1 id="二、Vaultwarden-与-Bitwarden-的区别"><a href="#二、Vaultwarden-与-Bitwarden-的区别" class="headerlink" title="二、Vaultwarden 与 Bitwarden 的区别"></a>二、Vaultwarden 与 Bitwarden 的区别</h1><p>除不支持官方企业版的部分功能（如目录同步、SSO、群组、自定义角色以及基于企业组织层面的 Duo Security 两步登录）外，其他大部分功能均免费支持。并跟随官方版本保持及时更新。</p><p>Vaultwarden 比官方版更轻量。官方版使用 .Net 开发，使用 MSSQL 数据库，要求至少 2GB 内存；Vaultwarden 使用 Rust 编写，改用 SQLite 数据库（现在也支持 MySQL 和 PostgreSQL），运行时只需要 10M 内存，可以说对硬件基本没有要求。</p><h1 id="三、搭建Vaultwarden"><a href="#三、搭建Vaultwarden" class="headerlink" title="三、搭建Vaultwarden"></a>三、搭建Vaultwarden</h1><p>在docker搜索vaultwarden，并下载</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%87%AA%E5%BB%BAVaultwarden%20%28Bitwarden%29/1.png" alt="image-1"></p><p>  配置好容器存储路径，其他的默认就好了</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%87%AA%E5%BB%BAVaultwarden%20%28Bitwarden%29/2.png" alt="image-2"></p><p>然后运行后点详细，记住这里的端口号</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%87%AA%E5%BB%BAVaultwarden%20%28Bitwarden%29/3.png" alt="image-3"></p><p>套件中心安装花生壳</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%87%AA%E5%BB%BAVaultwarden%20%28Bitwarden%29/4.png" alt="image-4"></p><p>然后配置花生壳，设置内网nas的ip还有Vaultwarden的端口号</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%87%AA%E5%BB%BAVaultwarden%20%28Bitwarden%29/5.png" alt="image-5"></p><p>然后访问外网地址，创建账号密码登录。搞定</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%87%AA%E5%BB%BAVaultwarden%20%28Bitwarden%29/6.png" alt="image-6"></p><p>配合无公网 IP 搭建 Cloudflare 免费隧道穿透：<a href="https://9ouu.github.io/blog/45195/">群晖系列：无公网IP搭建Cloudflare免费隧道穿透</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当Bitwarden在快速发展的过程中，自建版本发生了开发分支。2022年5月左右，docker image由原来的bitwardenrs&amp;#x2F;server官宣转为&lt;a href=&quot;https://hub.docker.com/r/vaultwarden/server</summary>
      
    
    
    
    <category term="群晖nas" scheme="https://9ouu.github.io/categories/%E7%BE%A4%E6%99%96nas/"/>
    
    
    <category term="Vaultwarden" scheme="https://9ouu.github.io/tags/Vaultwarden/"/>
    
    <category term="Bitwarden" scheme="https://9ouu.github.io/tags/Bitwarden/"/>
    
  </entry>
  
  <entry>
    <title>记一次代码泄漏处置过程</title>
    <link href="https://9ouu.github.io/blog/32792/"/>
    <id>https://9ouu.github.io/blog/32792/</id>
    <published>2023-04-06T13:49:24.000Z</published>
    <updated>2023-07-24T08:11:47.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>上班的时候，同事发现一则告警，是关于公司的代码泄漏，我看了一下，是个 dome 代码，但是一直放在公网上好像也不太好，它会一直告警，而且之后要是告警了领导看到也会问，干脆把它干掉算了。于是我让他找买了服务的厂家协助处置一下这个项目。</p><h2 id="二、厂家处置过程"><a href="#二、厂家处置过程" class="headerlink" title="二、厂家处置过程"></a>二、厂家处置过程</h2><p>跟厂家反馈完之后，哔哩吧啦一大堆，他居然跟我同事说只能处理有关的页面，而且叫我们提供一份处置文件，要证明风险，还要盖章…  wogiao 了，前几天才给完，搞了一个好久的盖章流程，起码 1 个多月。以我的理解不应该是整个项目连带处理掉吗？居然要一个文件一个文件处理，而且每个文件都要有一份文件说明且盖章，好家伙。我直接好家伙。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/1.jpg" alt="image"></p><h2 id="三、个人处理过程"><a href="#三、个人处理过程" class="headerlink" title="三、个人处理过程"></a>三、个人处理过程</h2><p>同事反馈完之后，我直接去群里问情况。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/2.png" alt="image"></p><p>得到了一个 “我确认一下” 的回复。算了还是自己动手吧，靠他们可能一个月都搞不定。<br>我想起了当年某位大佬分享的姿势，是可以通过 GitHub 找到项目负责人的邮箱（文章找不到了，不然我肯定贴个来源）。<br>然后我就开始尝试了起来，首先是访问项目，然后点击一下这里。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/3.png" alt="image"></p><p>然后当你在地址的最后面加上 .patch 之后，就有可能会显示出作者的注册邮箱，果然，我这里也出现了<br><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/4.png" alt="image"></p><p>虽然吧，这个 qq 号也可以找到 wx，但是还是社工 ku 反查一下吧。嘿嘿，果然查到了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/5.png" alt="image"></p><p>然后我通过 qq 还有手机号分别找到了 2 个 wx。不管了都加一遍再说。过了半小时，没想到手机号的 wx 通过了。我还想要是不通过的话我都要直接打电话的了。不管了，开始沟通。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/6.png" alt="image"></p><p>然后没过多久，就搞定了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/7.png" alt="image"></p><p>最后我直接给厂家甩了一句话。这个方法确实当你只有一个人的时候，可以进行尝试，说不定会行的通。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/8.png" alt="image"></p><h2 id="四、隐藏邮箱的方法"><a href="#四、隐藏邮箱的方法" class="headerlink" title="四、隐藏邮箱的方法"></a>四、隐藏邮箱的方法</h2><h4 id="1、不使用自己的邮箱注册"><a href="#1、不使用自己的邮箱注册" class="headerlink" title="1、不使用自己的邮箱注册"></a>1、不使用自己的邮箱注册</h4><h4 id="2、使用-GitHub-专用的替代邮箱"><a href="#2、使用-GitHub-专用的替代邮箱" class="headerlink" title="2、使用 GitHub 专用的替代邮箱"></a>2、使用 GitHub 专用的替代邮箱</h4><p>访问 <a href="https://github.com/settings/emails">https://github.com/settings/emails</a> ，在 Primary email address 一栏，我们能看到 GitHub 为我们提供了一个专用的用于在 git 中配置的邮箱地址，直接勾选上。<br>谷歌的翻译是这样的：</p><ul><li><p>在将我的电子邮件地址保密：<br>我们将删除您的公开个人资料电子邮件，并在执行基于 Web 的 Git 操作（例如编辑和合并）时使用 <a href="mailto:&#120;&#120;&#x78;&#120;&#x78;&#64;&#x75;&#115;&#101;&#x72;&#x73;&#46;&#x6e;&#x6f;&#114;&#101;&#x70;&#x6c;&#x79;&#46;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;">&#120;&#120;&#x78;&#120;&#x78;&#64;&#x75;&#115;&#101;&#x72;&#x73;&#46;&#x6e;&#x6f;&#114;&#101;&#x70;&#x6c;&#x79;&#46;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;</a> ，以及代表您发送电子邮件。如果您希望命令行 Git 操作使用您的私人电子邮件，则必须在 Git 中设置您的电子邮件。<br>使用此电子邮件推送到 GitHub 的提交仍将与您的帐户相关联。</p></li><li><p>阻止暴露我的电子邮件的命令行推送：<br>当您推送到 GitHub 时，我们将检查最近的提交。如果该提交的作者电子邮件是您 GitHub 帐户上的私人电子邮件，我们将阻止推送并警告您暴露您的私人电子邮件。address 一栏，我们能看到 GitHub 为我们提供了一个专用的用于在 git 中配置的邮箱地址。</p></li></ul><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/9.png" alt="image"></p><p>然后再次查看的时候就看不到了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F%E5%A4%84%E7%BD%AE%E8%BF%87%E7%A8%8B/10.png" alt="image"></p><h2 id="五、最后"><a href="#五、最后" class="headerlink" title="五、最后"></a>五、最后</h2><p>我发现每次处理一个单都会衍生出好多事情，其实我不理解买服务是来解决我们问题的还是来增加我们工作量的。加我们工作量的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;上班的时候，同事发现一则告警，是关于公司的代码泄漏，我看了一下，是个 dome 代码，但是一直放在公网上好像也不太好，它会一</summary>
      
    
    
    
    <category term="甲方安全运营" scheme="https://9ouu.github.io/categories/%E7%94%B2%E6%96%B9%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"/>
    
    
    <category term="代码泄漏" scheme="https://9ouu.github.io/tags/%E4%BB%A3%E7%A0%81%E6%B3%84%E6%BC%8F/"/>
    
    <category term="溯源" scheme="https://9ouu.github.io/tags/%E6%BA%AF%E6%BA%90/"/>
    
    <category term="Github" scheme="https://9ouu.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>群晖系列：无公网IP搭建Cloudflare免费隧道穿透</title>
    <link href="https://9ouu.github.io/blog/45195/"/>
    <id>https://9ouu.github.io/blog/45195/</id>
    <published>2023-04-05T09:54:07.000Z</published>
    <updated>2023-07-23T14:10:39.795Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、域名注册"><a href="#一、域名注册" class="headerlink" title="一、域名注册"></a>一、域名注册</h2><p>首先我们先注册一个域名，Freenom可以注册免费域名，但是好像最近不太稳定，官网点这里：<a href="https://link.zhihu.com/?target=https://www.freenom.com/">A Name for Everyone</a></p><p>而且国内出了新政，2022年3月起所有域名都要实名认证，不然有可能会频繁掉线，所以这里我推荐大家上阿里云实名注册一个域名：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><h2 id="二、cloudflare托管域名"><a href="#二、cloudflare托管域名" class="headerlink" title="二、cloudflare托管域名"></a>二、cloudflare托管域名</h2><p>点击这里添加域名</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/1.png" alt="image">)</p><p>然后选择这个免费的，点击继续</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/2.png" alt="image"></p><p>然后复制这里的 dns，按要求修改就行啦</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/3.png" alt="image"></p><h2 id="三、配置Zero-Trust"><a href="#三、配置Zero-Trust" class="headerlink" title="三、配置Zero Trust"></a>三、配置Zero Trust</h2><p>登录到cloudflare，找到Zero Trust</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/4.png" alt="image"></p><p>这里写个项目名字</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/5.png" alt="image"></p><p>选择免费的项目</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/6.png" alt="image"></p><p>这里需要绑定银行卡，绑定完之后进行解绑就行了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/7.png" alt="image"></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/8.png" alt="image"></p><p>!<img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/9.png" alt="image"></p><p>然后进来点击create a tunnel 创建一个tunnel</p><p>!<img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/10.png" alt="image"></p><p>这里随便写一个</p><p>!<img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/11.png" alt="image"></p><p>选择docker，然后复制下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run cloudflare/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoixxxxxx</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/12.png" alt="image"></p><h2 id="四、配置docker"><a href="#四、配置docker" class="headerlink" title="四、配置docker"></a>四、配置docker</h2><p>在群晖docker找到cloudflare后进行下载。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/13.png" alt="image"></p><p>然后开始配置cloudflare，选择高级设置。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/14.png" alt="image"></p><p>在执行命令的位置贴上复制下来的命令，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tunnel --no-autoupdate run --token eyJhIjoixxxxxx</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/15.png" alt="image"></p><p>然后点保存，端口不用配置，配置文件夹。新增加一个cloudflare，装载路径为&#x2F;etc&#x2F;cloudflared，然后点下一步完成就好了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/16.png" alt="image"></p><p>然后启动docker，可以看到cloudflare已经是正常使用了，直接访问域名可以访问到内网地址。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/17.png" alt="image"></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/18.png" alt="image"></p><h2 id="五、多隧道创建"><a href="#五、多隧道创建" class="headerlink" title="五、多隧道创建"></a>五、多隧道创建</h2><p>如果我想穿透不止一个端口那怎么办，其实特别简单，只需要再加一条隧道穿透规则，修改我们已有域名前面的子域名即可，操作如下 打开我们的隧道穿透Cloudflare Zero Trust</p><p>选择Access下的Tunnels 点击Configure今日我们已经创建好的穿透隧道，然后点击创建就好了</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%AD%E5%BB%BACloudflare%E5%85%8D%E8%B4%B9%E9%9A%A7%E9%81%93%E7%A9%BF%E9%80%8F/19.png" alt="image"></p><p>参考链接：<a href="https://zhuanlan.zhihu.com/p/591320825zhihu.com/p/591320825">https://zhuanlan.zhihu.com/p/591320825zhihu.com/p/591320825</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、域名注册&quot;&gt;&lt;a href=&quot;#一、域名注册&quot; class=&quot;headerlink&quot; title=&quot;一、域名注册&quot;&gt;&lt;/a&gt;一、域名注册&lt;/h2&gt;&lt;p&gt;首先我们先注册一个域名，Freenom可以注册免费域名，但是好像最近不太稳定，官网点这里：&lt;a href=&quot;</summary>
      
    
    
    
    <category term="群晖nas" scheme="https://9ouu.github.io/categories/%E7%BE%A4%E6%99%96nas/"/>
    
    
    <category term="Cloudflare" scheme="https://9ouu.github.io/tags/Cloudflare/"/>
    
    <category term="内网穿透" scheme="https://9ouu.github.io/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>群晖系列：自建Easyimage图床</title>
    <link href="https://9ouu.github.io/blog/3482/"/>
    <id>https://9ouu.github.io/blog/3482/</id>
    <published>2023-04-05T09:54:07.000Z</published>
    <updated>2023-07-23T14:26:21.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、EasyImages介绍"><a href="#一、EasyImages介绍" class="headerlink" title="一、EasyImages介绍"></a>一、EasyImages介绍</h2><p>Easyimage是一个开源的、支持多文件上传、简单无数据库,返回图片url,markdown,bbscode,html的一款图床程序。</p><ul><li><h3 id="easyimage特点："><a href="#easyimage特点：" class="headerlink" title="easyimage特点："></a>easyimage特点：</h3></li></ul><p>支持API、支持仅登录后上传、支持设置图片质量、支持压缩图片大小、支持文字&#x2F;图片水印、支持设置图片指定宽&#x2F;高、支持上传图片转换为指定格式、支持限制最低宽度&#x2F;高度上传、支持上传其他文件格式、在线管理图片、支持网站统计、支持设置广告、支持图片鉴黄、支持自定义代码、支持上传IP黑白名单、支持上传日志IP定位、支持限制日上传次数、支持创建仅上传用户、对于安装环境要求极低、对于服务器性能要求极低、理论上支持所有常见格式、等等···</p><ul><li><h3 id="GitHub："><a href="#GitHub：" class="headerlink" title="GitHub："></a>GitHub：</h3></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/icret/EasyImages2.0</span><br></pre></td></tr></table></figure><h2 id="二、EasyImages搭建"><a href="#二、EasyImages搭建" class="headerlink" title="二、EasyImages搭建"></a>二、EasyImages搭建</h2><p>在注册表搜索easyimage进行下载</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/1.png" alt="image"></p><p>默认下一步之后填写本地访问的端口</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/2.png" alt="image"></p><p>填写文件夹后完成即可</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/3.png" alt="image"></p><p>然后开启容器访问<a href="http://ip:port">http://ip:port</a>, 配置管理后台账号密码然后就可以了</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/4.png" alt="image"></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/5.png" alt="image"></p><h2 id="三、EasyImages安全设置"><a href="#三、EasyImages安全设置" class="headerlink" title="三、EasyImages安全设置"></a>三、EasyImages安全设置</h2><p>如果只是自己用 ，记得去掉这些勾选</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/6.png" alt="image"></p><p>上传设置选择WEBP，WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、 Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/7.png" alt="image"></p><p>这里根据个人需求勾选</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BAEasyimage%E5%9B%BE%E5%BA%8A/8.png" alt="image"></p><p>配合无公网 IP 搭建 Cloudflare 免费隧道穿透：<a href="https://9ouu.github.io/blog/45195/">群晖系列：无公网IP搭建Cloudflare免费隧道穿透</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、EasyImages介绍&quot;&gt;&lt;a href=&quot;#一、EasyImages介绍&quot; class=&quot;headerlink&quot; title=&quot;一、EasyImages介绍&quot;&gt;&lt;/a&gt;一、EasyImages介绍&lt;/h2&gt;&lt;p&gt;Easyimage是一个开源的、支持多文件上</summary>
      
    
    
    
    <category term="群晖nas" scheme="https://9ouu.github.io/categories/%E7%BE%A4%E6%99%96nas/"/>
    
    
    <category term="Easyimage" scheme="https://9ouu.github.io/tags/Easyimage/"/>
    
    <category term="图床" scheme="https://9ouu.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>群晖系列：自建Joplin-server</title>
    <link href="https://9ouu.github.io/blog/6935/"/>
    <id>https://9ouu.github.io/blog/6935/</id>
    <published>2023-04-05T09:54:07.000Z</published>
    <updated>2023-07-23T15:23:49.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Joplin介绍"><a href="#一、Joplin介绍" class="headerlink" title="一、Joplin介绍"></a>一、Joplin介绍</h2><ul><li><p><a href="https://joplinapp.org/">Joplin</a> 是一个开源的笔记工具，拥有 Windows&#x2F;macOS&#x2F;Linux&#x2F;iOS&#x2F;Android&#x2F;等版本的客户端，支持多端同步（重要），而且是免费的。</p></li><li><p>Joplin目前有很多种同步方式，可以选择一些网盘作为同步端，也可以用WebDAV服务，可以自建Joplin Server，也可以用官方收费版的Joplin Cloud。</p></li><li><p>一般个人有NAS的话，Joplin可以考虑使用WebDAV或者Joplin Server方式。这里是搭建Joplin Server，网上有很多WebDAV的教程就不在这记录了</p></li></ul><h2 id="二、安装配置Joplin-Serve"><a href="#二、安装配置Joplin-Serve" class="headerlink" title="二、安装配置Joplin Serve"></a>二、安装配置Joplin Serve</h2><h3 id="1、安装docker"><a href="#1、安装docker" class="headerlink" title="1、安装docker"></a>1、安装docker</h3><p>在群晖的套件中心安装docker</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/1.png" alt="image"></p><h3 id="2、安装容器"><a href="#2、安装容器" class="headerlink" title="2、安装容器"></a>2、安装容器</h3><p>首先配置一下docker源，默认会使用国外的镜像文件，下载可能会比较慢。如图所示，在启动注册表镜像的位置添加源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">镜像源地址：</span><br><span class="line">https://docker.mirrors.ustc.edu.cn</span><br><span class="line">http://hub-mirror.c.163.com</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/2.png" alt="image"></p><p>分别搜索Joplin，PostgreSQL进行下载，默认选择latest会下载最新版本。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/3.png" alt="image"></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/4.png" alt="image"></p><h4 id="配置PostgreSQL"><a href="#配置PostgreSQL" class="headerlink" title="配置PostgreSQL"></a>配置PostgreSQL</h4><p>下载后，准备启动先启动PostgreSQL进行配置，这里默认选择下一步</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/5.png" alt="image"></p><p>点击高级设置</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/6.png" alt="image"></p><p>新增加如下配置,这里配置的PostgreSQL密码需要记住！后面会用到。</p><table><thead><tr><th>变量</th><th>值</th></tr></thead><tbody><tr><td>POSTGRES_DB</td><td>joplin</td></tr><tr><td>POSTGRES_PASSWORD</td><td>自己设置密码</td></tr><tr><td>POSTGRES_USER</td><td>pgadmin</td></tr></tbody></table><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/7.png" alt="image"></p><p>配置端口映射，根据实际情况映射，我这里本地端口选择5433，因为5433被某个应用占用了，容器端口默认5432不需要修改。如果这个PostgreSQL只是给Joplin Server使用，这里应该可以不配置端口，因为我们后面用链接容器的方式连接到这个数据库，本地端口已经不重要了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/8.png" alt="image"></p><p>配置本地存储，映射到PostgreSQL的数据目录&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data，这样重启后存储数据不会丢失。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/9.png" alt="image"></p><p>勾选向导完成后运行此容器，然后点击完成，就可以放一边不用管它了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/10.png" alt="image"></p><h4 id="配置Joplin-server"><a href="#配置Joplin-server" class="headerlink" title="配置Joplin server"></a>配置Joplin server</h4><p>网络选择默认，然后下一步点高级设置。根据下表进行配置。</p><table><thead><tr><th>变量</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>APP_BASE_URL</td><td><a href="http://nas_ip:22300/">http://nas_ip:22300</a></td><td>根据自己nas的ip和自定义端口或域名进行配置</td></tr><tr><td>POSTGRES_PASSWORD</td><td>22300</td><td>默认22300，可以自定义配置映射端口</td></tr><tr><td>DB_CLIENT</td><td>pg</td><td>配置成PostgreSQL模式</td></tr><tr><td>POSTGRES_HOST</td><td>local_postgresql</td><td>链接到PostgreSQL容器</td></tr><tr><td>POSTGRES_DATABASE</td><td>joplin</td><td>数据库名</td></tr><tr><td>POSTGRES_USER</td><td>pgadmin</td><td>数据库用户名</td></tr><tr><td>POSTGRES_PORT</td><td>5432</td><td>默认是5432（直连容器端口，不是本地端口）</td></tr><tr><td>POSTGRES_PASSWORD</td><td>xxx</td><td>PostgreSQL密码</td></tr></tbody></table><p>配置链接，方便直接链接到PostgreSQL容器，这里使用别名：local_postgresql，到时候可以用作Joplin Server的POSTGRES_HOST配置：</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/11.png" alt="image"></p><p>点击保存后新增端口22300</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/12.png" alt="image"></p><p>配置存储空间</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/13.png" alt="image"></p><p>勾选向导完成后运行此容器，然后点击完成。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/14.png" alt="image"></p><p>点击容器可以看到PostgreSQL跟Joplin server正常运行着。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/15.png" alt="image"></p><p>打开浏览器访问<a href="http://ip:port,可以看到访问正常。">http://ip:port,可以看到访问正常。</a></p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/16.png" alt="image"></p><p>输入默认账号密码进入后台，然后可以到图片所指的地方对用户名密码进行更改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admin@localhost</span><br><span class="line">密码：admin</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/17.png" alt="image"></p><h2 id="三、连接Joplin-Server"><a href="#三、连接Joplin-Server" class="headerlink" title="三、连接Joplin Server"></a>三、连接Joplin Server</h2><p>配置好链接，账号密码，就可以进行同步了。</p><p><img src="https://raw.githubusercontent.com/9ouu/qx/main/icon/blog/%E7%BE%A4%E6%99%96%E7%B3%BB%E5%88%97%EF%BC%9A%E8%87%AA%E5%BB%BA%20Joplin-server/18.png" alt="image"></p><p>配合无公网 IP 搭建 Cloudflare 免费隧道穿透：<a href="https://9ouu.github.io/blog/45195/">群晖系列：无公网IP搭建Cloudflare免费隧道穿透</a>io&#x2F;blog&#x2F;45195&#x2F;)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、Joplin介绍&quot;&gt;&lt;a href=&quot;#一、Joplin介绍&quot; class=&quot;headerlink&quot; title=&quot;一、Joplin介绍&quot;&gt;&lt;/a&gt;一、Joplin介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://joplinapp.or</summary>
      
    
    
    
    <category term="群晖nas" scheme="https://9ouu.github.io/categories/%E7%BE%A4%E6%99%96nas/"/>
    
    
    <category term="Joplin" scheme="https://9ouu.github.io/tags/Joplin/"/>
    
    <category term="笔记软件" scheme="https://9ouu.github.io/tags/%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
</feed>
